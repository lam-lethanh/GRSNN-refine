```yaml
output_dir: ./experiments/

dataset:
  class: MovieLensLinkPrediction  # Custom class for MovieLens
  path: ./datasets/recommendation/movielens/ml-100k  # Path to MovieLens 100K
  split_ratio: [0.8, 0.1, 0.1]  # Train/Valid/Test split
  filter: true  # Filtered ranking for evaluation

task:
  class: LinkPrediction
  model:
    class: GRSNN
    input_dim: 32  # Same as CiteSeer for consistency
    hidden_dim: 32  # Same as CiteSeer
    dependent: no  # Homogeneous graph, no relation dependency
    remove_one_hop: yes  # Remove one-hop edges during evaluation
    symmetric: yes  # User-item graph treated as undirected
    tau: 4.0  # Membrane time constant, same as CiteSeer
    Vth: 2.0  # Spike threshold, same as CiteSeer
    delay_bound: 4  # Delay bound, same as CiteSeer
    self_connection: False  # No self-loops
    time_steps: 10  # Optimal from article (Appendix E.3)
    temporal_decay_ratio: 0.95  # Same as CiteSeer for exponential decay
  criterion: bce  # Binary cross-entropy for link prediction
  num_negative: 50  # More negatives for recommendation (vs 1 in CiteSeer)
  strict_negative: yes  # Ensure negatives are valid

optimizer:
  class: Adam
  lr: 2.0e-3  # Same as CiteSeer

engine:
  gpus: {{ gpus }}  # Placeholder for GPU (e.g., [0])
  batch_size: 200  # Larger for MovieLens scale (vs 32 in CiteSeer)
  num_workers: 4  # For DataLoader efficiency

train:
  num_epoch: 50  # Increased for recommendation task (vs 20 in CiteSeer)
  early_stopping:
    patience: 5
    metric: auroc  # Monitor AUROC on valid set

metric:
  - auroc  # Area Under ROC Curve
  - ap  # Average Precision
  - precision@10  # Precision at top-10 recommendations
  - recall@10  # Recall at top-10 recommendations
  - ndcg@10  # Normalized Discounted Cumulative Gain at 10
```
